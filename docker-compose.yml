services:
    postgres:
        image: postgres
        ports:
            - 5432:5432
        environment:
            - POSTGRES_NAME
            - POSTGRES_USERNAME
            - POSTGRES_PASSWORD
            - POSTGRES_DATABASE
    # reverse-proxy:
    #     # The official v2 Traefik docker image
    #     image: traefik:v2.10
    #     # Enables the web UI and tells Traefik to listen to docker
    #     # TODO: exposedByDefault=false?
    #     command: --api.insecure=true --providers.docker
    #     ports:
    #         # The HTTP port
    #         - "80:80"
    #         # The Web UI (enabled by --api.insecure=true)
    #         - "8080:8080"
    #     volumes:
    #         # So that Traefik can listen to the Docker events
    #         - /var/run/docker.sock:/var/run/docker.sock
    web:
        image: node:18
        depends_on:
            - postgres
        volumes:
            - .:/app
        working_dir: /app
        ports:
            - 3000:3000
        command: sh -c 'npm run sync && npm run dev'
        # note: next automatically loads all env files from .env
        environment:
            - DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}
    ws:
        image: node:18
        volumes:
            - .:/app
        working_dir: /app
        command: npm run ws
        ports:
            - 4444:4444
        environment:
            - NODE_ENV
            - REDIS_HOST
            - SOCKET_PORT=${SOCKET_PORT}
    redis:
        image: redis:7
        container_name: ${REDIS_HOST}
# services:
#     postgres:
#         env_file:
#             - .env
#         image: postgres
#         ports:
#             - 5432:5432
#     web:
#         build:
#             context: ./
#             target: runner
#         volumes:
#             - .:/app
#         command: npm run dev
#         ports:
#             - "3000:3000"
#         environment:
#             NODE_ENV: development
